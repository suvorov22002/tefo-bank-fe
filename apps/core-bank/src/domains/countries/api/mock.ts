import { INTEGRATED_RenderDynamicFields } from 'ui'

import {
  CountryStatus,
  CreateCountryRequestData,
  GetCountriesResponseData,
  GetCountryTemplateResponseData,
} from '../types'

export const getCountriesResponseDataMock: GetCountriesResponseData = {
  page: 1,
  limit: 10,
  totalItems: 2,
  data: [
    {
      id: 1,
      shortName: 'Ctr1',
      name: 'Country1',
      phoneCode: '+333',
      phoneLengthMin: 7,
      phoneLengthMax: 9,
      status: CountryStatus.ACTIVE,
      createdAt: '2023-08-16T14:52:09.399Z',
      updatedAt: '2023-08-16T14:52:09.399Z',
      updatedBy: 'Someone',
      ISOAlpha3Code: 'CT1',
      ISOAlpha2Code: 'C1',
      ISONumericCode: '1',
    },
    {
      id: 2,
      shortName: 'Ctr2',
      name: 'Country2',
      phoneCode: '+444',
      phoneLengthMin: 7,
      phoneLengthMax: 9,
      status: CountryStatus.ACTIVE,
      createdAt: '2023-08-16T14:52:09.399Z',
      updatedAt: '2023-08-16T14:52:09.399Z',
      updatedBy: 'Someone',
      ISOAlpha3Code: 'CT2',
      ISOAlpha2Code: 'C2',
      ISONumericCode: '2',
    },
  ],
}

export const getCountryTemplateResponseMock: GetCountryTemplateResponseData = {
  id: '',
  name: '',
  groups: [],
  primaryFields: [
    {
      id: '',
      code: 'shortName',
      fieldName: null,
      fieldDescription: null,
      label: 'Short Name',
      entityName: null,
      placeholder: null,
      helpText: null,
      tooltip: null,
      defaultValue: {},
      required: true,
      visible: true,
      order: 0,
      groupCode: null,
      hiddenOnCreate: false,
      type: INTEGRATED_RenderDynamicFields.DynamicFieldTypes.Text,
      validation: {
        rules: [
          {
            id: '1',
            status: INTEGRATED_RenderDynamicFields.DynamicFieldValidationRuleStatuses.Active,
            type: INTEGRATED_RenderDynamicFields.ValidationRuleTypes.Required,
            priority: -10,
            value: true,
            message: 'Value should not be null',
          },
        ],
      },
      properties: {},
      entityLevel: null,
      independent: true,
      status: INTEGRATED_RenderDynamicFields.DynamicFieldStatuses.Active,
    },
    {
      id: 'f1',
      code: 'name',
      fieldName: null,
      fieldDescription: null,
      label: 'Name',
      entityName: null,
      placeholder: null,
      helpText: null,
      tooltip: null,
      required: true,
      visible: true,
      order: 1,
      groupCode: null,
      hiddenOnCreate: false,
      defaultValue: {},
      type: INTEGRATED_RenderDynamicFields.DynamicFieldTypes.Text,
      validation: {
        rules: [
          {
            id: '2',
            status: INTEGRATED_RenderDynamicFields.DynamicFieldValidationRuleStatuses.Active,
            type: INTEGRATED_RenderDynamicFields.ValidationRuleTypes.Required,
            priority: -10,
            value: true,
            message: 'Value should not be null',
          },
        ],
      },
      properties: {},
      entityLevel: null,
      independent: true,
      status: INTEGRATED_RenderDynamicFields.DynamicFieldStatuses.Active,
    },
    {
      id: 'f2',
      code: 'ISOAlpha3Code',
      fieldName: null,
      fieldDescription: null,
      label: 'Alpha-3 Code',
      entityName: null,
      placeholder: null,
      helpText: null,
      tooltip: null,
      required: true,
      visible: true,
      order: 2,
      groupCode: null,
      hiddenOnCreate: false,
      defaultValue: {},
      type: INTEGRATED_RenderDynamicFields.DynamicFieldTypes.Text,
      validation: {
        rules: [
          {
            id: '3',
            status: INTEGRATED_RenderDynamicFields.DynamicFieldValidationRuleStatuses.Active,
            type: INTEGRATED_RenderDynamicFields.ValidationRuleTypes.Required,
            priority: -10,
            value: true,
            message: 'Value should not be null',
          },
        ],
      },
      properties: {},
      entityLevel: null,
      independent: true,
      status: INTEGRATED_RenderDynamicFields.DynamicFieldStatuses.Active,
    },
    {
      id: 'f3',
      code: 'ISOAlpha2Code',
      fieldName: null,
      fieldDescription: null,
      label: 'Alpha-2 Code',
      entityName: null,
      placeholder: null,
      helpText: null,
      tooltip: null,
      required: true,
      visible: true,
      order: 3,
      groupCode: null,
      hiddenOnCreate: false,
      defaultValue: {},
      type: INTEGRATED_RenderDynamicFields.DynamicFieldTypes.Text,
      validation: {
        rules: [
          {
            id: '4',
            status: INTEGRATED_RenderDynamicFields.DynamicFieldValidationRuleStatuses.Active,
            type: INTEGRATED_RenderDynamicFields.ValidationRuleTypes.Required,
            priority: -10,
            value: true,
            message: 'Value should not be null',
          },
        ],
      },
      properties: {},
      entityLevel: null,
      independent: true,
      status: INTEGRATED_RenderDynamicFields.DynamicFieldStatuses.Active,
    },
    {
      id: 'f4',
      code: 'ISONumericCode',
      fieldName: null,
      fieldDescription: null,
      label: 'Numeric Code',
      entityName: null,
      placeholder: null,
      helpText: null,
      defaultValue: {},
      tooltip: null,
      required: true,
      visible: true,
      order: 4,
      groupCode: null,
      hiddenOnCreate: false,
      type: INTEGRATED_RenderDynamicFields.DynamicFieldTypes.Text,
      validation: {
        rules: [
          {
            id: '5',
            status: INTEGRATED_RenderDynamicFields.DynamicFieldValidationRuleStatuses.Active,
            type: INTEGRATED_RenderDynamicFields.ValidationRuleTypes.Required,
            priority: -10,
            value: true,
            message: 'Value should not be null',
          },
        ],
      },
      properties: {},
      entityLevel: null,
      independent: true,
      status: INTEGRATED_RenderDynamicFields.DynamicFieldStatuses.Active,
    },
    {
      id: 'f5',
      code: 'phoneCode',
      fieldName: null,
      fieldDescription: null,
      label: 'Phone Code',
      entityName: null,
      placeholder: null,
      helpText: null,
      tooltip: null,
      required: true,
      visible: true,
      order: 5,
      groupCode: null,
      defaultValue: {},
      hiddenOnCreate: false,
      type: INTEGRATED_RenderDynamicFields.DynamicFieldTypes.Text,
      validation: {
        rules: [
          {
            id: '6',
            status: INTEGRATED_RenderDynamicFields.DynamicFieldValidationRuleStatuses.Active,
            type: INTEGRATED_RenderDynamicFields.ValidationRuleTypes.Required,
            priority: -10,
            value: true,
            message: 'Value should not be null',
          },
        ],
      },
      properties: {},
      entityLevel: null,
      independent: true,
      status: INTEGRATED_RenderDynamicFields.DynamicFieldStatuses.Active,
    },
    {
      id: 'f6',
      code: 'phoneLengthMin',
      fieldName: null,
      fieldDescription: null,
      label: 'Phone Length Min',
      entityName: null,
      placeholder: null,
      helpText: null,
      tooltip: null,
      required: true,
      visible: true,
      order: 6,
      defaultValue: {},
      groupCode: null,
      hiddenOnCreate: false,
      type: INTEGRATED_RenderDynamicFields.DynamicFieldTypes.Integer,
      validation: {
        rules: [
          {
            id: '7',
            status: INTEGRATED_RenderDynamicFields.DynamicFieldValidationRuleStatuses.Active,
            type: INTEGRATED_RenderDynamicFields.ValidationRuleTypes.Required,
            priority: -10,
            value: true,
            message: 'Value should not be null',
          },
        ],
      },
      properties: {},
      entityLevel: null,
      independent: true,
      status: INTEGRATED_RenderDynamicFields.DynamicFieldStatuses.Active,
    },
    {
      id: 'f7',
      code: 'phoneLengthMax',
      fieldName: null,
      fieldDescription: null,
      label: 'Phone Length Max',
      entityName: null,
      placeholder: null,
      helpText: null,
      tooltip: null,
      required: true,
      visible: true,
      order: 7,
      groupCode: null,
      hiddenOnCreate: false,
      defaultValue: {},
      type: INTEGRATED_RenderDynamicFields.DynamicFieldTypes.Integer,
      validation: {
        rules: [
          {
            id: '8',
            status: INTEGRATED_RenderDynamicFields.DynamicFieldValidationRuleStatuses.Active,
            type: INTEGRATED_RenderDynamicFields.ValidationRuleTypes.Required,
            priority: -10,
            value: true,
            message: 'Value should not be null',
          },
        ],
      },
      properties: {},
      entityLevel: null,
      independent: true,
      status: INTEGRATED_RenderDynamicFields.DynamicFieldStatuses.Active,
    },
    {
      id: 'f8',
      code: 'status',
      fieldName: null,
      fieldDescription: null,
      label: 'Status',
      defaultValue: {},
      entityName: null,
      placeholder: null,
      helpText: null,
      tooltip: null,
      required: true,
      visible: true,
      hiddenOnCreate: false,
      status: INTEGRATED_RenderDynamicFields.DynamicFieldStatuses.Active,
      order: 8,
      groupCode: null,
      type: INTEGRATED_RenderDynamicFields.DynamicFieldTypes.List,
      validation: {
        rules: [
          {
            id: '9',
            status: INTEGRATED_RenderDynamicFields.DynamicFieldValidationRuleStatuses.Active,
            type: INTEGRATED_RenderDynamicFields.ValidationRuleTypes.Required,
            priority: -10,
            value: true,
            message: 'Field value is missing',
          },
        ],
      },
      properties: {
        options: [
          {
            order: 2,
            key: 'INACTIVE',
            value: 'INACTIVE',
          },
          {
            order: 1,
            key: 'ACTIVE',
            value: 'ACTIVE',
          },
        ],
        defaultValue: 'ACTIVE',
      },
      entityLevel: null,
      independent: true,
    },
  ],
  customFields: [],
}

export const createCountryRequestDataMock: CreateCountryRequestData = {
  shortName: 'Ctr99999',
  name: 'Country99999',
  phoneCode: '+999',
  phoneLengthMin: 7,
  phoneLengthMax: 9,
  status: CountryStatus.ACTIVE,
  ISOAlpha3Code: 'CT99999',
  ISOAlpha2Code: 'C99999',
  ISONumericCode: '99999',
}

export const createCountryResponseDataMock = {
  id: 99999,
  shortName: 'Ctr99999',
  name: 'Country99999',
  phoneCode: '+999',
  phoneLengthMin: 7,
  phoneLengthMax: 9,
  status: CountryStatus.ACTIVE,
  createdAt: '2023-08-16T14:52:09.399Z',
  updatedAt: '2023-08-16T14:52:09.399Z',
  updatedBy: 'Someone',
  ISOAlpha3Code: 'CT99999',
  ISOAlpha2Code: 'C99999',
  ISONumericCode: '99999',
}
